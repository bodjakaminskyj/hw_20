{"version":3,"sources":["components/timer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Timer","props","onTick","time","state","secounds","minutes","console","log","onTimeEnd","onTimeStart","start","onTimePause","Math","floor","time_up","autostart","infiniteTimer","InfiniteTimer","clickStart","bind","clickStop","this","tiker","setInterval","setState","ceil","step","clearInterval","className","substr","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a206897.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Timer extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            minutes: Math.floor(this.props.time / 1000 / 60),\r\n            secounds: Math.floor(this.props.time %60000/1000),\r\n            time_up: \"\",\r\n            start: this.props.autostart,\r\n            onTick: this.props.onTick,\r\n            onTimeEnd: this.props.onTimeEnd,\r\n            onTimeStart: this.props.onTimeStart,\r\n            onTimePause: this.props.onTimePause,\r\n            infiniteTimer: this.props.InfiniteTimer  \r\n        }\r\n        this.clickStart = this.clickStart.bind(this);\r\n        this.clickStop = this.clickStop.bind(this);\r\n    \r\n    }\r\n  \r\n    \r\n    componentDidMount() {\r\n        if(this.state.onTimeStart){\r\n            this.onTimeStart()\r\n        }\r\n        this.tiker = setInterval((()=>{\r\n            if(this.state.start){\r\n                this.setState({secounds: Math.ceil((this.state.secounds - 1*this.props.step/1000)*100)/100 })\r\n                if(this.state.onTick && this.state.start){\r\n                    this.onTick()\r\n                    }\r\n                if (this.state.secounds <= 0 && this.state.minutes === 0 && this.state.infiniteTimer ) {\r\n                    this.setState({\r\n                        minutes: Math.floor(this.props.time / 1000 / 60),\r\n                        secounds: Math.floor(this.props.time %60000/1000)})\r\n                }else if (this.state.secounds <= 0 && this.state.minutes === 0) {\r\n                    clearInterval(this.tiker);\r\n                    if(this.state.onTimeEnd){\r\n                        this.onTimeEnd();\r\n                    }\r\n                    this.setState({minutes: 0, secounds: 0, time_up: \"TIME IS UP\" })\r\n                }else if(this.state.secounds < 0 && this.state.minutes !== 0){\r\n                    this.setState({secounds: 60 + this.state.secounds, minutes: this.state.minutes - 1})\r\n                }                  \r\n            }\r\n                \r\n            }), 1000);    \r\n    }\r\n  \r\n    onTick= () => {\r\n        const time = (this.state.secounds + this.state.minutes * 60) * 1000\r\n        if(time>0){\r\n            console.log(\"Залишилось часу: \" + time + \" ms\")\r\n        }\r\n    }\r\n    onTimeEnd=() => console.log(\"Час вийшов!\")\r\n    onTimeStart=() => {\r\n        if(!this.state.start){\r\n            console.log(\"Таймер запущено!\")\r\n        }\r\n    }\r\n    onTimePause=() => {\r\n        if(this.state.start){\r\n            console.log(\"Таймер на паузі!\")\r\n        }\r\n    }\r\n    clickStart(){\r\n        this.setState({start: true})\r\n        if(this.state.onTimeStart)\r\n        this.onTimeStart()\r\n    }\r\n    clickStop(){\r\n        this.setState({start: false})\r\n        if(this.state.onTimePause)\r\n        this.onTimePause()\r\n    }\r\n    \r\n    render() {\r\n        \r\n        return ( \r\n            <div className='timer'>          \r\n            <div>\r\n                <span>STEP {this.props.step} мс </span>\r\n                {this.props.autostart ? <span>AutoStart </span>:<span></span> }\r\n                <h2>{('0'+ this.state.minutes).substr(-2)}:{ this.props.step===100 ? ('0' + Math.floor(this.state.secounds)).substr(-2) : ('0' + this.state.secounds).substr(-2) }</h2>\r\n            </div>\r\n            <h1>{this.state.time_up}</h1>\r\n            <button onClick={this.clickStart} >START</button>\r\n            <button onClick={this.clickStop} >STOP</button>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import './App.css';\nimport Timer from './components/timer';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Timer time = {61000}    step={1000} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}